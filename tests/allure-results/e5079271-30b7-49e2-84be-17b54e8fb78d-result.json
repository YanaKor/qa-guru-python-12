{"name": "test_fill_authorization_form", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=117.0.5938.149)\nStacktrace:\n\tGetHandleVerifier [0x00C3CFE3+45267]\n\t(No symbol) [0x00BC9741]\n\t(No symbol) [0x00ABBCE0]\n\t(No symbol) [0x00AAE5A4]\n\t(No symbol) [0x00AACECE]\n\t(No symbol) [0x00AAD4B8]\n\t(No symbol) [0x00ABDBC3]\n\t(No symbol) [0x00B1E371]\n\t(No symbol) [0x00B0B03C]\n\t(No symbol) [0x00B1DDDA]\n\t(No symbol) [0x00B0AE36]\n\t(No symbol) [0x00AE674E]\n\t(No symbol) [0x00AE78ED]\n\tGetHandleVerifier [0x00EF5659+2897737]\n\tGetHandleVerifier [0x00F3E78B+3197051]\n\tGetHandleVerifier [0x00F38571+3171937]\n\tGetHandleVerifier [0x00CC5E40+606000]\n\t(No symbol) [0x00BD338C]\n\t(No symbol) [0x00BCF508]\n\t(No symbol) [0x00BCF62F]\n\t(No symbol) [0x00BC1D27]\n\tBaseThreadInitThunk [0x775F6359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77737B74+228]\n\tRtlGetAppContainerNamedObjectPath [0x77737B44+180]", "trace": "def test_fill_authorization_form():\n        with allure.step(\"Open registrations form\"):\n>           browser.open('/automation-practice-form')\n\ntest_authorization_form.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\configuration.py:253: in get\n    driver.get(url)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:355: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000027250CF0340>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77737B74+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77737B44+180]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=117.0.5938.149)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00C3CFE3+45267]\nE       \t(No symbol) [0x00BC9741]\nE       \t(No symbol) [0x00ABBCE0]\nE       \t(No symbol) [0x00AAE5A4]\nE       \t(No symbol) [0x00AACECE]\nE       \t(No symbol) [0x00AAD4B8]\nE       \t(No symbol) [0x00ABDBC3]\nE       \t(No symbol) [0x00B1E371]\nE       \t(No symbol) [0x00B0B03C]\nE       \t(No symbol) [0x00B1DDDA]\nE       \t(No symbol) [0x00B0AE36]\nE       \t(No symbol) [0x00AE674E]\nE       \t(No symbol) [0x00AE78ED]\nE       \tGetHandleVerifier [0x00EF5659+2897737]\nE       \tGetHandleVerifier [0x00F3E78B+3197051]\nE       \tGetHandleVerifier [0x00F38571+3171937]\nE       \tGetHandleVerifier [0x00CC5E40+606000]\nE       \t(No symbol) [0x00BD338C]\nE       \t(No symbol) [0x00BCF508]\nE       \t(No symbol) [0x00BCF62F]\nE       \t(No symbol) [0x00BC1D27]\nE       \tBaseThreadInitThunk [0x775F6359+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77737B74+228]\nE       \tRtlGetAppContainerNamedObjectPath [0x77737B44+180]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: InvalidArgumentException"}, "steps": [{"name": "Open registrations form", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=117.0.5938.149)\nStacktrace:\n\tGetHandleVerifier [0x00C3CFE3+45267]\n\t(No symbol) [0x00BC9741]\n\t(No symbol) [0x00ABBCE0]\n\t(No symbol) [0x00AAE5A4]\n\t(No symbol) [0x00AACECE]\n\t(No symbol) [0x00AAD4B8]\n\t(No symbol) [0x00ABDBC3]\n\t(No symbol) [0x00B1E371]\n\t(No symbol) [0x00B0B03C]\n\t(No symbol) [0x00B1DDDA]\n\t(No symbol) [0x00B0AE36]\n\t(No symbol) [0x00AE674E]\n\t(No symbol) [0x00AE78ED]\n\tGetHandleVerifier [0x00EF5659+2897737]\n\tGetHandleVerifier [0x00F3E78B+3197051]\n\tGetHandleVerifier [0x00F38571+3171937]\n\tGetHandleVerifier [0x00CC5E40+606000]\n\t(No symbol) [0x00BD338C]\n\t(No symbol) [0x00BCF508]\n\t(No symbol) [0x00BCF62F]\n\t(No symbol) [0x00BC1D27]\n\tBaseThreadInitThunk [0x775F6359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77737B74+228]\n\tRtlGetAppContainerNamedObjectPath [0x77737B44+180]\n\n", "trace": "  File \"C:\\Users\\veryu\\PycharmProjects\\qa-guru-python-7-12\\tests\\test_authorization_form.py\", line 8, in test_fill_authorization_form\n    browser.open('/automation-practice-form')\n  File \"C:\\Users\\veryu\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\entity.py\", line 1155, in open\n    self.config._executor.get_url(relative_or_absolute_url)\n  File \"C:\\Users\\veryu\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\configuration.py\", line 301, in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n  File \"C:\\Users\\veryu\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\configuration.py\", line 253, in get\n    driver.get(url)\n  File \"C:\\Users\\veryu\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 355, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"C:\\Users\\veryu\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\veryu\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1697563338156, "stop": 1697563355830}], "start": 1697563338156, "stop": 1697563355836, "uuid": "891e36af-ec19-4ef9-99cb-5a9fd0d46590", "historyId": "c6191478d21a2a9096a504f286d79a20", "testCaseId": "5659f363673c44f8dc28dd86b5436947", "fullName": "tests.test_authorization_form#test_fill_authorization_form", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_authorization_form"}, {"name": "host", "value": "DESKTOP-S15PP4S"}, {"name": "thread", "value": "7320-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_authorization_form"}]}